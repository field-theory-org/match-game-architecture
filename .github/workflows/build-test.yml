# Automation script file for the code related to the MVVM-FRP
# architecture post on field-theory.org.
#
# This automation builds and tests the different apps discussed in the
# related posts.
#
# (c) 2023 by Dr. Wolfram Schroers <wolfram.schroers@field-theory.org>
---
name: Build and test all apps
on: [push]

concurrency:
  group: ${{ github.ref }}-${{ github.workflow }}
  cancel-in-progress: true

jobs:

  common-linter:
    name: Run the linter for the common infrastructure
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      - run: swiftlint 01_Common/

  common-model:
    name: Build and test the common infrastructure for the model
    runs-on: macos-latest
    needs: [common-linter]

    steps:
      - uses: actions/checkout@v3
      - name: Build and test
        run: |
          cd 01_Common/MatchModel ; swift test

  cli:
    name: Build the command line app
    runs-on: macos-latest
    needs: [common-model]
    steps:
      - name: Git checkout code
        uses: actions/checkout@v3
      - name: Run linter and build the project
        run: |
          set -o pipefail
          swiftlint 10_Commandline-App/
          xcodebuild -workspace 10_Commandline-App/MatchGame/MatchGame.xcworkspace -scheme Matchgame clean build | xcpretty -c

  basic:
    name: Build and test the iOS app based on the MVC pattern
    runs-on: macos-latest
    needs: [common-model]
    steps:
      - name: Git checkout code
        uses: actions/checkout@v3
      - name: Run linter, build and test the project
        run: |
          set -o pipefail
          swiftlint 20_Basic-App/
          xcodebuild -project 20_Basic-App/MatchGame/MatchGame.xcodeproj -scheme MatchGame CODE_SIGN_IDENTITY="" CODE_SIGNING_REQUIRED=NO -resultBundlePath TestResults -destination "platform=iOS Simulator,OS=16.2,name=iPhone 14" build test | xcpretty -c

      - uses: kishikawakatsumi/xcresulttool@v1
        with:
          path: TestResults.xcresult
        if: success() || failure()

  mvvm:
    name: Build and test the iOS app based on the MVVM pattern
    runs-on: macos-latest
    needs: [common-model]
    steps:
      - name: Git checkout code
        uses: actions/checkout@v3
      - name: Run linter, build and test the project
        run: |
          set -o pipefail
          swiftlint 30_MVVM-App
          xcodebuild -project 30_MVVM-App/MatchGame/MatchGame.xcodeproj -scheme MatchGame CODE_SIGN_IDENTITY="" CODE_SIGNING_REQUIRED=NO -resultBundlePath TestResults -destination "platform=iOS Simulator,OS=16.2,name=iPhone 14" build test | xcpretty -c
      - uses: kishikawakatsumi/xcresulttool@v1
        with:
          path: TestResults.xcresult
        if: success() || failure()

